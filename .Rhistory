t_x4 <- as.numeric(t_x4)
t_x4 <- data.frame(matrix(t_x4, ncol = 12))
colnames(t_x4) <- colnames
t_x4 <- rbind(rep(0, 12), rep(1, 12), t_x4)
t_sumarize <- rbind(t_x1[3,], t_x2[3, ], t_x3[3, ], t_x4[3, ])
rownames(t_sumarize) <- c('春', '夏', '秋', '冬')
t_sumarize <- rbind(rep(1, 12), rep(0, 12), t_sumarize)
color <- c("#00AFBB", "#E7B800", "#FC4E07", '#A2CD5A')
create_beautiful_radarchart <- function(data, color){
radarchart(
data, axistype = 1,
# Customize the polygon
pcol = color, pfcol = scales::alpha(color, 0.1), plwd = 2, plty = 1,
# Customize the grid
cglcol = "grey", cglty = 1, cglwd = 0.8,
# Customize the axis
axislabcol = "grey",
# Variable labels
vlcex = 0.8
)
}
op <- par(mar = c(1, 1, 1, 1))
create_beautiful_radarchart(t_sumarize, color)
legend(
x = "right", legend = c('春', '夏', '秋', '冬'), horiz = F,
bty = "n", pch = 20 , col = color,
text.col = "black", cex = 1, pt.cex = 1.5
)
par(op)
x1
x1 <- df1[df1$發生月份 >= 1 & df1$發生月份 <= 3,] %>% group_by(地區) %>% summarize(count = n())
x2 <- df1[df1$發生月份 >= 4 & df1$發生月份 <= 6,] %>% group_by(地區) %>% summarize(count = n())
x3 <- df1[df1$發生月份 >= 7 & df1$發生月份 <= 9,] %>% group_by(地區) %>% summarize(count = n())
x4 <- df1[df1$發生月份 >= 10 & df1$發生月份 <= 12,] %>% group_by(地區) %>% summarize(count = n())
x1$count <- x1$count / max(x1$count)
x2$count <- x2$count / max(x2$count)
x3$count <- x3$count / max(x3$count)
x4$count <- x4$count / max(x4$count)
substr(x1$地區, 3, 6)
x1$地區
t_x1 <- t(x1)
t_x2 <- t(x2)
t_x3 <- t(x3)
t_x4 <- t(x4)
colnames <- t_x1[1,]
t_x1 <- t_x1[2, ]
t_x1 <- as.numeric(t_x1)
t_x1 <- data.frame(matrix(t_x1, ncol = 12))
colnames(t_x1) <- colnames
t_x1 <- rbind(rep(0, 12), rep(1, 12), t_x1)
colnames <- t_x2[1,]
t_x2 <- t_x2[2, ]
t_x2 <- as.numeric(t_x2)
t_x2 <- data.frame(matrix(t_x2, ncol = 12))
colnames(t_x2) <- colnames
t_x2 <- rbind(rep(0, 12), rep(1, 12), t_x2)
colnames <- t_x3[1,]
t_x3 <- t_x3[2, ]
t_x3 <- as.numeric(t_x3)
t_x3 <- data.frame(matrix(t_x3, ncol = 12))
colnames(t_x3) <- colnames
t_x3 <- rbind(rep(0, 12), rep(1, 12), t_x3)
colnames <- t_x4[1,]
t_x4 <- t_x4[2, ]
t_x4 <- as.numeric(t_x4)
t_x4 <- data.frame(matrix(t_x4, ncol = 12))
colnames(t_x4) <- colnames
t_x4 <- rbind(rep(0, 12), rep(1, 12), t_x4)
t_sumarize <- rbind(t_x1[3,], t_x2[3, ], t_x3[3, ], t_x4[3, ])
rownames(t_sumarize) <- c('春', '夏', '秋', '冬')
t_sumarize <- rbind(rep(1, 12), rep(0, 12), t_sumarize)
color <- c("#00AFBB", "#E7B800", "#FC4E07", '#A2CD5A')
create_beautiful_radarchart <- function(data, color){
radarchart(
data, axistype = 1,
# Customize the polygon
pcol = color, pfcol = scales::alpha(color, 0.1), plwd = 2, plty = 1,
# Customize the grid
cglcol = "grey", cglty = 1, cglwd = 0.8,
# Customize the axis
axislabcol = "grey",
# Variable labels
vlcex = 0.8
)
}
op <- par(mar = c(1, 1, 1, 1))
create_beautiful_radarchart(t_sumarize, color)
legend(
x = "right", legend = c('春', '夏', '秋', '冬'), horiz = F,
bty = "n", pch = 20 , col = color,
text.col = "black", cex = 1, pt.cex = 1.5
)
par(op)
library(ggradar)
install.packages("ggradar")
library(ggradar)
t_sumarize
t_sumarize[3:,]
t_sumarize[3:6,]
ggradar(t_sumarize[3:6,], )
ggradar(t_sumarize[3:6,], values.radar = c(0, 0.25, 0.5, 0.75, 1))
library(ggradar)
install.packages("devtools")
devtools::install_github("ricardo-bion/ggradar")
library(ggradar)
ggradar(t_sumarize[3:6,], values.radar = c(0, 0.25, 0.5, 0.75, 1))
ggradar(t_sumarize[3:6,], values.radar = c(0, 0.5, 1))
ggradar(t_sumarize[3:6,], values.radar = c(0, 0.5, 1),
group.colour = color)
t_sumarize[3:6,]
ggradar(t_sumarize[3:6,], values.radar = c(0, 0.5, 1),
group.colours = color)
color
y = t_sumarize[3:6,]
ggradar(y, values.radar = c(0, 0.5, 1),
group.colours = color)
ggradar(t_sumarize, values.radar = c(0, 0.5, 1),
group.colours = color)
ggradar(y, values.radar = c(0, 0.5, 1),
group.colours = color)
ggradar(y,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = color)
warning()
warnings()
ggradar(y,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = color)
warnings()
y
ggradar(y)
ggradar(y,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = color)
par(op)
create_beautiful_radarchart(t_sumarize, color)
legend(
x = "right", legend = c('春', '夏', '秋', '冬'), horiz = F,
bty = "n", pch = 20 , col = color,
text.col = "black", cex = 1, pt.cex = 1.5
)
par(op)
setwd("C:/Users/user/Desktop/政大/競賽/內政部/shiny/Shiny/data")
library(sf)
library(gridExtra)
library(ggplot2)
library(RColorBrewer)
library(maps)
library(mapproj)
library(ggmap)
library(lubridate)
library(tidyverse)
df1 <- read.csv("traffic_complete.csv", as.is = T,
fileEncoding = "BIG5", header = T)
head(df1)
library(fmsb)
library(dplyr)
x1 <- df1[df1$發生月份 >= 1 & df1$發生月份 <= 3,] %>% group_by(地區) %>% summarize(count = n())
x2 <- df1[df1$發生月份 >= 4 & df1$發生月份 <= 6,] %>% group_by(地區) %>% summarize(count = n())
x3 <- df1[df1$發生月份 >= 7 & df1$發生月份 <= 9,] %>% group_by(地區) %>% summarize(count = n())
x4 <- df1[df1$發生月份 >= 10 & df1$發生月份 <= 12,] %>% group_by(地區) %>% summarize(count = n())
x1$count <- x1$count / max(x1$count)
x2$count <- x2$count / max(x2$count)
x3$count <- x3$count / max(x3$count)
x4$count <- x4$count / max(x4$count)
t_x1 <- t(x1)
t_x2 <- t(x2)
t_x3 <- t(x3)
t_x4 <- t(x4)
colnames <- t_x1[1,]
t_x1 <- t_x1[2, ]
t_x1 <- as.numeric(t_x1)
t_x1 <- data.frame(matrix(t_x1, ncol = 12))
colnames(t_x1) <- colnames
t_x1 <- rbind(rep(0, 12), rep(1, 12), t_x1)
colnames <- t_x2[1,]
t_x2 <- t_x2[2, ]
t_x2 <- as.numeric(t_x2)
t_x2 <- data.frame(matrix(t_x2, ncol = 12))
colnames(t_x2) <- colnames
t_x2 <- rbind(rep(0, 12), rep(1, 12), t_x2)
colnames <- t_x3[1,]
t_x3 <- t_x3[2, ]
t_x3 <- as.numeric(t_x3)
t_x3 <- data.frame(matrix(t_x3, ncol = 12))
colnames(t_x3) <- colnames
t_x3 <- rbind(rep(0, 12), rep(1, 12), t_x3)
colnames <- t_x4[1,]
t_x4 <- t_x4[2, ]
t_x4 <- as.numeric(t_x4)
t_x4 <- data.frame(matrix(t_x4, ncol = 12))
colnames(t_x4) <- colnames
t_x4 <- rbind(rep(0, 12), rep(1, 12), t_x4)
t_sumarize <- rbind(t_x1[3,], t_x2[3, ], t_x3[3, ], t_x4[3, ])
rownames(t_sumarize) <- c('春', '夏', '秋', '冬')
t_sumarize <- rbind(rep(1, 12), rep(0, 12), t_sumarize)
color <- c("#00AFBB", "#E7B800", "#FC4E07", '#A2CD5A')
y = t_sumarize[3:6,]
library(ggradar)
ggradar(y,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = color)
y
y
cbind(rownames(y), y)
y = cbind(rownames(y), y)
colnames(y)[1]
colnames(y)[1] = 'Group'
y
ggradar(y,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = color)
### 車速與車禍總數
?ggradar
```{r}
---
title: "OD-60550091_科技警探-路上的守護者"
library(flexdashboard)
library(sf)
library(gridExtra)
library(ggplot2)
library(RColorBrewer)
library(maps)
library(mapproj)
library(ggmap)
library(lubridate)
library(tidyverse)
library(plotly)
library(leaflet)
library(showtext)
library(ggradar)
windowsFonts(A = windowsFont('微軟正黑體'))
# Taipei Map
taiwan.town.map <- st_read("data/TOWN_MOI_1120317.shp")
taipei.map <- taiwan.town.map[taiwan.town.map$COUNTYNAME == "臺北市", ]
# Traffic Complete
traffic <- read.csv("data/traffic_complete.csv", as.is = T,
fileEncoding = "BIG5", header = T)
traffic_c <- traffic[, c(1, 3, 4, 14, 15)]
colnames(traffic_c) <- c('發生月份', '肇事地點', '死亡人數', '經度', '緯度')
traffic_p <- traffic[, c(2, 14, 15)]
traffic_group <- traffic %>%
group_by(地區, 發生月份) %>% summarise(total_count = n())
traffic_group$發生月份 <-as.factor(traffic_group$發生月份)
# science
science <- read.csv("data/science1.csv", as.is = T,
fileEncoding = "BIG5", header = T)
# road
road <- read.csv("data/road.csv", row.names = 1, encoding = 'BIG5')
road[road$AvgSpd >= 65, '是否超速'] <- 1
road[road$AvgSpd < 65, '是否超速'] <- 0
road$是否超速 <- factor(road$是否超速, levels = c(1, 0), labels = c("是", "否"))
road <- road %>% filter(StartWgsX > 121.54)
# radar
df1 <- read.csv("data/traffic_complete.csv", as.is = T,
fileEncoding = "BIG5", header = T)
x1 <- df1[df1$發生月份 >= 1 & df1$發生月份 <= 3,] %>%
group_by(地區) %>%
summarize(count = n())
x2 <- df1[df1$發生月份 >= 4 & df1$發生月份 <= 6,] %>%
group_by(地區) %>%
summarize(count = n())
x3 <- df1[df1$發生月份 >= 7 & df1$發生月份 <= 9,] %>%
group_by(地區) %>%
summarize(count = n())
x4 <- df1[df1$發生月份 >= 10 & df1$發生月份 <= 12,] %>%
group_by(地區) %>%
summarize(count = n())
x1$count <- x1$count / max(x1$count)
x2$count <- x2$count / max(x2$count)
x3$count <- x3$count / max(x3$count)
x4$count <- x4$count / max(x4$count)
t_x1 <- t(x1)
t_x2 <- t(x2)
t_x3 <- t(x3)
t_x4 <- t(x4)
colnames <- t_x1[1,]
t_x1 <- t_x1[2, ]
t_x1 <- as.numeric(t_x1)
t_x1 <- data.frame(matrix(t_x1, ncol = 12))
colnames(t_x1) <- colnames
t_x1 <- rbind(rep(0, 12), rep(1, 12), t_x1)
colnames <- t_x2[1,]
t_x2 <- t_x2[2, ]
t_x2 <- as.numeric(t_x2)
t_x2 <- data.frame(matrix(t_x2, ncol = 12))
colnames(t_x2) <- colnames
t_x2 <- rbind(rep(0, 12), rep(1, 12), t_x2)
colnames <- t_x3[1,]
t_x3 <- t_x3[2, ]
t_x3 <- as.numeric(t_x3)
t_x3 <- data.frame(matrix(t_x3, ncol = 12))
colnames(t_x3) <- colnames
t_x3 <- rbind(rep(0, 12), rep(1, 12), t_x3)
colnames <- t_x4[1,]
t_x4 <- t_x4[2, ]
t_x4 <- as.numeric(t_x4)
t_x4 <- data.frame(matrix(t_x4, ncol = 12))
colnames(t_x4) <- colnames
t_x4 <- rbind(rep(0, 12), rep(1, 12), t_x4)
t_sumarize <- rbind(t_x1[3,], t_x2[3, ], t_x3[3, ], t_x4[3, ])
rownames(t_sumarize) <- c('春', '夏', '秋', '冬')
t_sumarize <- rbind(rep(1, 12), rep(0, 12), t_sumarize)
color <- c("#00AFBB", "#E7B800", "#FC4E07", '#A2CD5A')
y = t_sumarize[3:6,]
y = cbind(rownames(y), y)
colnames(y)[1] = 'Group'
valueBox(nrow(traffic), caption = "2022年總車禍量", icon = "fa-car-burst")
valueBox(sum(traffic$死亡人數), caption = "2022年車禍死亡人數", color = "danger", icon = "fa-skull-crossbones")
valueBox(nrow(science), caption = "科技執法路段總數", color = "success", icon = "fa-camera")
valueBox(
732, caption = "尚未實施科技執法路段總數", color = "info",
icon = "fab fa-xmark"
)
DT::datatable(traffic_c, filter = 'top', fillContainer = TRUE,
options = list(columnDefs = list(list(className = 'dt-center', targets = c(1, 3, 4, 5)))))
DT::datatable(science, filter = 'top', fillContainer = TRUE,
options = list(columnDefs = list(list(className = 'dt-center', targets = c(2, 3, 4)))))
scatter_ggplot =
taipei.map %>%
ggplot() +
geom_sf(aes(fill = TOWNNAME), show.legend = F) +
geom_sf_text(aes(label = TOWNNAME), size = 3) +
geom_point(aes(x = X, y = Y), size = 0.5,
col = "black", data = traffic, alpha = 0.5) +
coord_cartesian()
p1 <- ggplot(data = traffic_group, aes(x = as.factor(發生月份),
y = total_count, group = 地區, color = 地區)) +
labs(x = '車禍發生月份', y = '車禍總次數') +
geom_line( size = 1.2) +
geom_point()
df_group <- traffic %>%
group_by(地區) %>% summarise(total_count = n())
p2 <- ggplot(df_group, aes(x = reorder(as.factor(地區), -total_count), y = total_count, group = 地區, color = 地區, fill = 地區)) +
geom_bar(stat = "identity") +
labs(x = '車禍發生地區', y = '車禍總次數')
ply1 <- ggplotly(p1)
ply2 <- ggplotly(p2)
ply3 <- ggplotly(scatter_ggplot)
merge_1 <- subplot(ply1, ply2, nrows = 2) %>%
layout(annotations = list(list(x = 0.6 ,
y = 1.05,
text = "車禍總次數與月份折線圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28),
list(x = 0.6,
y = -0.08,
text = "車禍總次數與地區直方圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28)))
subplot(ply3, merge_1, widths = c(0.4, 0.6), nrows = 1) %>%
layout(annotations = list(list(x = 0.15 ,
y = 1.05,
text = "車禍事故散佈圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28))
)
p3 <- taipei.map %>%
ggplot() +
geom_sf(aes(fill = TOWNNAME), show.legend = F) +
geom_sf_text(aes(label = TOWNNAME), size = 3) +
geom_point(aes(x = X, y = Y), size = 0.5,
col = 'black', data = traffic_p, alpha = 0.5) +
geom_segment(data = road,
aes(x = StartWgsX, y = StartWgsY,
xend = EndWgsX, yend = EndWgsY,
col = 是否超速),
size = 1, show.legend = F) +
scale_color_manual(values = c('red', "forestgreen")) +
coord_cartesian()
p4 <- ggradar(y,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = color,
group.line.width = 1,
group.point.size = 3) +
coord_cartesian()
subplot(p3, p4, nrows = 1, widths = c(0.45, 0.55)) %>%
layout(annotations = list(list(x = 0.13,
y = 1.05,
text = "車速與車禍事故圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28),
list(x = 0.8 ,
y = 1.05,
text = "四季車禍雷達圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28))
)
s1 <- ggplot(data = taipei.map) +
geom_sf(aes(fill = TOWNNAME), show.legend = F) +
geom_sf_text(aes(label = TOWNNAME), size = 3) +
labs(x = '經度', y = '緯度') +
geom_point(aes(x = X, y = Y), size = 0.5,
col = "black",
data = traffic[(traffic$發生月份 == 1) ,], alpha = 1) +
geom_point(aes(x = 經度, y = 緯度), size = 2,
col = "red", data = science, alpha = 1) +
coord_cartesian()
s2 <- ggplot(data = taipei.map) +
geom_sf(aes(fill = TOWNNAME), show.legend = F) +
geom_sf_text(aes(label = TOWNNAME), size = 3) +
labs(x = '經度', y = '緯度') +
geom_point(aes(x = X, y = Y), size = 0.5,
col = "black",
data = traffic[(traffic$發生月份 == 12),], alpha = 1) +
geom_point(aes(x = 經度, y = 緯度), size = 2,
col = "red", data = science, alpha = 1) +
coord_cartesian()
subplot(s1, s2, nrows = 1) %>%
layout(annotations = list(list(x = 0.17 ,
y = 1.05,
text = "科技執法前(111/1)車禍發生圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28),
list(x = 0.85 ,
y = 1.05,
text = "科技執法後(111/12)車禍發生圖",
showarrow = F,
xref = 'paper',
yref = 'paper',
size = 28))
)
library("rsconnect")
rsconnect::deployApp('app')
rsconnect::setAccountInfo(name='ray0630', token='6E81F118398DAC9DFFFAA7A14A1DB5F7', secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
rsconnect::setAccountInfo(name='ray0630', token='6E81F118398DAC9DFFFAA7A14A1DB5F7', secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
library(rsconnect)
rsconnect::deployApp('app.Rmd')
rsconnect::deployDoc('app.Rmd')
library(rsconnect)
deployApp()
rsconnect::setAccountInfo(name='ray0630',
token='6E81F118398DAC9DFFFAA7A14A1DB5F7',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ray0630',
token='6E81F118398DAC9DFFFAA7A14A1DB5F7',
secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
deployApp()
cls
install.packages("Rcpp")
rsconnect::setAccountInfo(name='ray0630',
token='6E81F118398DAC9DFFFAA7A14A1DB5F7',
secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
deployApp()
library(rsconnect)
rsconnect::setAccountInfo(name='ray0630',
token='6E81F118398DAC9DFFFAA7A14A1DB5F7',
secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
deployApp()
rsconnect::setAccountInfo(name='ray0630',
token='6E81F118398DAC9DFFFAA7A14A1DB5F7',
secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
deployApp(appDir = getwd())
rsconnect::setAccountInfo(name='ray0630', token='6E81F118398DAC9DFFFAA7A14A1DB5F7', secret='2Y2mw0M5wbL8jSWAiuhDmsoC0BZnOP0nV0umuRUE')
deployApp()
install.packages(c("rmarkdown", "yaml"))
install.packages(c("knitr", "rmarkdown","yaml"))
install.packages(c("knitr", "rmarkdown", "yaml"))
deployApp()
library(rsconnect)
deployApp()
deployApp()
library(rsconnect)
deployApp()
deployApp()
library(extrafont)
install.packages("extrafont")
deployApp()
deployApp()
library(shiny)
shinyApp(
ui = fluidPage(
includeHTML(rmarkdown::render("app.Rmd"))),
server = function(input, output) {
}
)
